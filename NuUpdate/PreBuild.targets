<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask
    TaskName="GetVersion"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
    <ParameterGroup>
      <VersionString ParameterType="System.String" Required="true" />
      <Major ParameterType="System.Int32" Output="true" />
      <Minor ParameterType="System.Int32" Output="true" />
      <Patch ParameterType="System.Int32" Output="true" />
      <Revision ParameterType="System.Int32" Output="true" />
      <Commit ParameterType="System.String" Output="true" />
    </ParameterGroup>
    <Task>
      <!--<Reference Include="" />-->
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          var match = Regex.Match(VersionString, @"^v(?<major>\d+)\.(?<minor>\d+)(\.(?<patch>\d+))?-(?<revision>\d+)-(?<commit>[a-z0-9]+)$");
          Int32.TryParse(match.Groups["major"].Value, out _Major);
          Int32.TryParse(match.Groups["minor"].Value, out _Minor);
          Int32.TryParse(match.Groups["patch"].Value, out _Patch);
          Int32.TryParse(match.Groups["revision"].Value, out _Revision);
          Commit = match.Groups["commit"].Value;
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="CreateCommonVersionInfo" BeforeTargets="Compile">
    <Exec Command="git describe --tags --long > version.txt" Outputs="version.txt" />
    <ReadLinesFromFile File="version.txt">
      <Output TaskParameter="Lines" ItemName="OutputLines"/>
    </ReadLinesFromFile>
    <Delete Files="version.txt"/>
    
    <GetVersion VersionString="@(OutputLines)">
      <Output TaskParameter="Major" PropertyName="Major"/>
      <Output TaskParameter="Minor" PropertyName="Minor"/>
      <Output TaskParameter="Patch" PropertyName="Patch"/>
      <Output TaskParameter="Revision" PropertyName="Revision"/>
      <Output TaskParameter="Commit" PropertyName="Commit"/>
    </GetVersion>

    <Message Importance="High" Text="Creating CommonVersionInfo with version $(Major).$(Minor).$(Patch).$(Revision)-$(Commit)" />

    <WriteLinesToFile Overwrite="true" File="CommonAssemblyInfo.cs" Encoding="UTF-8" Lines='using System.Reflection%3B

// full version: $(Major).$(Minor).$(Patch).$(Revision)-$(Commit)

[assembly: AssemblyVersion("$(Major).$(Minor).$(Patch).$(Revision)")]
[assembly: AssemblyInformationalVersion("$(Major).$(Minor).$(Patch).$(Revision)")]
[assembly: AssemblyFileVersion("$(Major).$(Minor).$(Patch).$(Revision)")]' />
    
  </Target>
</Project>
